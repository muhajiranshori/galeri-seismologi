[{"content":"Halo semua, ini adalah postingan pertama saya. Selamat datang di Galeri Seismologi, sebuah media untuk saling berbagi dan berdiskusi seputar dunia seismologi.\nBagi anda mahasiswa ilmu kebumian, akademisi, praktisi kegempaan atau siapapun yang cinta dengan bidang ini, mari bergabung dan belajar bersama.\nCatatan-catatan ini saya tulis sebagai sebuah dokumentasi proses belajar yang saya lakukan dan semoga dapat bermanfaat bagi kita semua\nSalam\n","permalink":"http://www.galeri-seismologi.com/post/hello-world/","summary":"Halo semua, ini adalah postingan pertama saya. Selamat datang di Galeri Seismologi, sebuah media untuk saling berbagi dan berdiskusi seputar dunia seismologi.\nBagi anda mahasiswa ilmu kebumian, akademisi, praktisi kegempaan atau siapapun yang cinta dengan bidang ini, mari bergabung dan belajar bersama.\nCatatan-catatan ini saya tulis sebagai sebuah dokumentasi proses belajar yang saya lakukan dan semoga dapat bermanfaat bagi kita semua\nSalam","title":"Hello World"},{"content":"#1 Persiapan Data ( filter data katalog) Tahap awal dalam tomografi adalah persiapan data arrival time. Untuk menghasilkan data yang spesifik, perlu dilakukan filter pada data katalog berdasarkan beberapa paramter data yaitu :\n polyrange Batas Koordinat daerah penelitian daterange Rentang periode data (Tangal/Bulan/Tahun) magrange Rentang magnitudo deprange Rentang kedalaman azrange Rentang azimuthal gap rmsrange Rentang rms residual cphrange Rentang jumlah fase  Langkah-Langkah Filter Data Katalog Filter data katalog dilakuan dengan menngunakan script Filter_Katalog.py dengan langkah-langkah :\n Edit nama file input fi='Repository_2018.txt' dan output fo='Mamasa.txt' pada baris 2 dan 3. Edit parameter katalog pada baris 4 - 16 sesuai kebutuhan. Simpan perubahan edit lalu jalankan script dengan cara klik kanan pada file script - pilih edit with IDLE - pilih menu Run -\u0026gt; Run Module Maka akan ter-create file output Mamasa.txt yang mengandung data sesuai kriteria yang telah ditentukan  *Catatan : Semakin ketat kriteria yang diterapkan, semakin sedidkit data katalog yang dihasilkan.\nPlot Seismisitas Untuk keperluan visualisasi data, lakukan plotting seismisitas menggunakan GMT4 dengan langkah sebagai berikut :\n Jalankan script cat2event.py untuk merubah format data Mamasa.txt menjadi cat_event_Mamasa.dat sesuai dengan definisi file input dan output pada baris 5 dan 6. Jalankan script Seismistas_Mamasa.bat dan Slice_Mamasa.bat dengan terlebih dahulu mendefinisikan data input pada baris 5.  *Catatan : Jangan lupa menyediakan file pendukung yang terdapat disini dan mengedit baris 7 - 12 sesuai dengan path file pada komputer anda.\nHasil plot menggunakan script Seismisitas_Mamasa.bat Hasil plot menggunakan script Slice_Mamasa.bat ","permalink":"http://www.galeri-seismologi.com/post/save-part/simulps12/tomografi-simulps12-part1-datapreparation/","summary":"#1 Persiapan Data ( filter data katalog) Tahap awal dalam tomografi adalah persiapan data arrival time. Untuk menghasilkan data yang spesifik, perlu dilakukan filter pada data katalog berdasarkan beberapa paramter data yaitu :\n polyrange Batas Koordinat daerah penelitian daterange Rentang periode data (Tangal/Bulan/Tahun) magrange Rentang magnitudo deprange Rentang kedalaman azrange Rentang azimuthal gap rmsrange Rentang rms residual cphrange Rentang jumlah fase  Langkah-Langkah Filter Data Katalog Filter data katalog dilakuan dengan menngunakan script Filter_Katalog.","title":"Tomografi Simulps12 Part 1: Data Preparation"},{"content":"#1 Overview #2 Persiapan Data ( filter data katalog) Tahap awal dalam tomografi adalah persiapan data arrival time. Untuk menghasilkan data yang spesifik, perlu dilakukan filter pada data katalog berdasarkan beberapa paramter data yaitu :\n polyrange Batas Koordinat daerah penelitian daterange Rentang periode data (Tangal/Bulan/Tahun) magrange Rentang magnitudo deprange Rentang kedalaman azrange Rentang azimuthal gap rmsrange Rentang rms residual cphrange Rentang jumlah fase  Langkah-Langkah Filter Data Katalog Filter data katalog dilakuan dengan menngunakan script Filter_Katalog.py dengan langkah-langkah :\n Edit nama file input fi='Repository_2018.txt' dan output fo='Mamasa.txt' pada baris 2 dan 3. Edit parameter katalog pada baris 4 - 16 sesuai kebutuhan. Simpan perubahan edit lalu jalankan script dengan cara klik kanan pada file script - pilih edit with IDLE - pilih menu Run -\u0026gt; Run Module Maka akan ter-create file output Mamasa.txt yang mengandung data sesuai kriteria yang telah ditentukan  *Catatan : Semakin ketat kriteria yang diterapkan, semakin sedidkit data katalog yang dihasilkan.\nPlot Seismisitas Untuk keperluan visualisasi data, lakukan plotting seismisitas menggunakan GMT4 dengan langkah sebagai berikut :\n Jalankan script cat2event.py untuk merubah format data Mamasa.txt menjadi cat_event_Mamasa.dat sesuai dengan definisi file input dan output pada baris 5 dan 6. Jalankan script Seismistas_Mamasa.bat dan Slice_Mamasa.bat dengan terlebih dahulu mendefinisikan data input pada baris 5.  *Catatan : Jangan lupa menyediakan file pendukung yang terdapat disini dan mengedit baris 7 - 12 sesuai dengan path file pada komputer anda.\nHasil plot menggunakan script Seismisitas_Mamasa.bat Hasil plot menggunakan script Slice_Mamasa.bat #3 Grid Node #4 Running #5 Ray Tracing #6 Plot Result #7 Plot Tomogram #8 Chekerboard Test ","permalink":"http://www.galeri-seismologi.com/post/tomografi-simulps12/","summary":"#1 Overview #2 Persiapan Data ( filter data katalog) Tahap awal dalam tomografi adalah persiapan data arrival time. Untuk menghasilkan data yang spesifik, perlu dilakukan filter pada data katalog berdasarkan beberapa paramter data yaitu :\n polyrange Batas Koordinat daerah penelitian daterange Rentang periode data (Tangal/Bulan/Tahun) magrange Rentang magnitudo deprange Rentang kedalaman azrange Rentang azimuthal gap rmsrange Rentang rms residual cphrange Rentang jumlah fase  Langkah-Langkah Filter Data Katalog Filter data katalog dilakuan dengan menngunakan script Filter_Katalog.","title":"Tomografi Simulps12 Part 1: Data Preparation"},{"content":"Hypoellipse adalah program untuk menentukan \u0026hellip;\n","permalink":"http://www.galeri-seismologi.com/post/tutorial-hypoinvers/","summary":"\u003cp\u003eHypoellipse adalah program untuk menentukan \u0026hellip;\u003c/p\u003e","title":"Tutorial Hypoinvers"},{"content":"Hypoellipse adalah program untuk menentukan \u0026hellip;\n","permalink":"http://www.galeri-seismologi.com/post/tutorial-hypoellipse/","summary":"\u003cp\u003eHypoellipse adalah program untuk menentukan \u0026hellip;\u003c/p\u003e","title":"Tutorial Hypoellipse"},{"content":"Jupyter notebook adalah cara lain untuk menjalanakan script beberapa pemograman terutama python.\nkali ini saya akan mencoba menginstall di os linux. bagi anda pengguna woindows silakan mencoba juga.\ncara install nya adalah\nconda install notebook  ","permalink":"http://www.galeri-seismologi.com/post/install-jupyter-notebook/","summary":"Jupyter notebook adalah cara lain untuk menjalanakan script beberapa pemograman terutama python.\nkali ini saya akan mencoba menginstall di os linux. bagi anda pengguna woindows silakan mencoba juga.\ncara install nya adalah\nconda install notebook  ","title":"Install Jupyter Notebook"},{"content":"Berikut adalah cara install obpsy\nconda create -n obspy python=3.7\rconda activate obspy\rconda install obspy\r","permalink":"http://www.galeri-seismologi.com/post/install-obspy/","summary":"\u003cp\u003eBerikut adalah cara install obpsy\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003econda create -n obspy python=3.7\r\nconda activate obspy\r\nconda install obspy\r\n\u003c/code\u003e\u003c/pre\u003e","title":"Install Obspy"},{"content":"Galeri-Seismologi Merupakan media untuk berbagi dan berdiskusi banyak hal terkait seismologi seperti relokasi hiposenter, tomografi seismik dan pengolahan waveform.\nContent   Hypoellipse\n Daerah Penelitian Convert Data Running Hypoelipse [Running Hypoellipse Multi Event] [Plot Result]    Relokasi-Velest\n Daerah Penelitian Convert Data Running Velest [Plot Result]    Relokasi-HypoDD\n Daerah Penelitian Convert Data Running HypoDD [Plot Result]    Relokasi-MJHD\n  Tomografi-Simulps12\n Filter Katalog Convert Data Grid Node Running Simulps12 Ray Tracing [Plot Relocated Earthuqake] [Plot Tomogram] [Checkerboard Test]    Waveform-Treatment\n Download Waveform  [webdc] [fdsnws] [massdownloader obspy]   Remove Instrument Response  [extrak pz file] [remove instrument response]   [Convert Metadata] Picking  [seisgram] [SAC]   [Waveform Alignment] [Waveform Downsampling] TauP Seizmo Dimas SAC Miscellaneous    Ambiet Noise Cross-Correlation (ANCC)\n [Raw Data Preparation] [Running ANCC] [Plot Result]    Earthquake Detection (EQcorrscan)\n [Create Template] [Match Filter] [Plot Result]    Moment-Yagi\n [Daerah Penelitian] [Raw Data Preparation] [Running Moment]    Isola\n [Daerah Penelitian] [Raw Data Preparation] [Running Moment] [Plot Result]    Shear Wave Splitting (Sheba)\n  Spectral Fitting\n  Peak Ground Acceleration (PGA)\n  Interferometric Synthetic Aperture Radar (inSAR)\n  Horizontal to Vertical Spectral Ratio (HVSR)\n  Installations\n [GMT] [TauP] [Seisan] [SAC] [Sheba] [Moment] [rdseed] [python] [seizmo] [cygwin] [WSL] [VsCode] [Obspy] [EQcorrscan] [pip]    ","permalink":"http://www.galeri-seismologi.com/post/galeri_seismologi/","summary":"Galeri-Seismologi Merupakan media untuk berbagi dan berdiskusi banyak hal terkait seismologi seperti relokasi hiposenter, tomografi seismik dan pengolahan waveform.\nContent   Hypoellipse\n Daerah Penelitian Convert Data Running Hypoelipse [Running Hypoellipse Multi Event] [Plot Result]    Relokasi-Velest\n Daerah Penelitian Convert Data Running Velest [Plot Result]    Relokasi-HypoDD\n Daerah Penelitian Convert Data Running HypoDD [Plot Result]    Relokasi-MJHD\n  Tomografi-Simulps12\n Filter Katalog Convert Data Grid Node Running Simulps12 Ray Tracing [Plot Relocated Earthuqake] [Plot Tomogram] [Checkerboard Test]    Waveform-Treatment","title":"Galeri Seismologi"},{"content":"Berikut adalah cara install tauP\n","permalink":"http://www.galeri-seismologi.com/post/install-taup/","summary":"\u003cp\u003eBerikut adalah cara install tauP\u003c/p\u003e","title":"Install TauP"},{"content":"Berisi tutorial melakukan relokasi hiposenter gempabumi menggunakan software Velest\n##","permalink":"http://www.galeri-seismologi.com/post/save-part/velest/relokasi-velest-part4-plot-result/","summary":"\u003cp\u003eBerisi tutorial melakukan relokasi hiposenter gempabumi menggunakan software Velest\u003c/p\u003e\n\u003cp\u003e#\u003cimg loading=\"lazy\" src=\"https://user-images.githubusercontent.com/28419810/108987074-72b48480-76c5-11eb-9614-93cdd540031c\" alt=\"Palu_awal\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e#\u003cimg loading=\"lazy\" src=\"https://user-images.githubusercontent.com/28419810/108987090-7942fc00-76c5-11eb-9ee7-7d81d968ac46\" alt=\"Palu_final\"  /\u003e\n\u003c/p\u003e","title":"Relokasi Velest Part 4 Plot Result"},{"content":"GMT adalah mapping tool terpopuler saat ini yang banyak digunakan oleh para peneliti.\nBerikut adalah cara instlla GMT.\nTerdapat beberapa versi GMT, kali ini saya akan tunjukkan GMT 4.\n","permalink":"http://www.galeri-seismologi.com/post/install-gmt/","summary":"GMT adalah mapping tool terpopuler saat ini yang banyak digunakan oleh para peneliti.\nBerikut adalah cara instlla GMT.\nTerdapat beberapa versi GMT, kali ini saya akan tunjukkan GMT 4.","title":"Install Generic Mapping Tool (GMT)"},{"content":"Beriku adalah cara install pyGMT\n1 2 3  conda create -n pyGMT python=3.7 conda activate pyGMT conda install pyGMT   Namun jika anda ingin meng-install pada env tertentu misal env eqtransformer, maka setelah anda selesai menginstall EQT maka :\naktifkan EQT lalu install pyGMT\n1 2  conda activate eqtransformer conda install pyGMT   Nah sekarang, module pygmt sudah ada dalam eqt\ncoba dengan perintah\n1  import pygmt   jika tidak muncul error, maka pygmt telah berhasil terinstall\n","permalink":"http://www.galeri-seismologi.com/post/install-pygmt/","summary":"Beriku adalah cara install pyGMT\n1 2 3  conda create -n pyGMT python=3.7 conda activate pyGMT conda install pyGMT   Namun jika anda ingin meng-install pada env tertentu misal env eqtransformer, maka setelah anda selesai menginstall EQT maka :\naktifkan EQT lalu install pyGMT\n1 2  conda activate eqtransformer conda install pyGMT   Nah sekarang, module pygmt sudah ada dalam eqt\ncoba dengan perintah\n1  import pygmt   jika tidak muncul error, maka pygmt telah berhasil terinstall","title":"Install pyGMT"},{"content":"sac2mseed adalah asalah satu tool penting\n","permalink":"http://www.galeri-seismologi.com/post/install-sac2mseed/","summary":"sac2mseed adalah asalah satu tool penting","title":"Install sac2mseed"},{"content":"mseed2sac adalah asalah satu tool penting\n","permalink":"http://www.galeri-seismologi.com/post/install-mseed2sac/","summary":"mseed2sac adalah asalah satu tool penting","title":"Install mseed2sac"},{"content":"Seizmo adalah program berbasis matlab yang dikenbangkan oleh Garreth Euler dari washington unoversity.\nDi dalamnya terkandung banyak sekali modul-modul untuk pengolahan waveform.\nBrikut adalah cara installasinya.\n","permalink":"http://www.galeri-seismologi.com/post/install-seizmo/","summary":"Seizmo adalah program berbasis matlab yang dikenbangkan oleh Garreth Euler dari washington unoversity.\nDi dalamnya terkandung banyak sekali modul-modul untuk pengolahan waveform.\nBrikut adalah cara installasinya.","title":"Install Seizmo"},{"content":"Berikut adalah cara install sac\n","permalink":"http://www.galeri-seismologi.com/post/install-sac/","summary":"Berikut adalah cara install sac","title":"Install SAC"},{"content":"Pyrocko Sebastian Heimann\n","permalink":"http://www.galeri-seismologi.com/post/install-pyrocko/","summary":"Pyrocko Sebastian Heimann","title":"Install Pyrocko"},{"content":"EQTransformer\n","permalink":"http://www.galeri-seismologi.com/post/install-eqtransformer/","summary":"EQTransformer","title":"Install EQTransformer"},{"content":"Seizmo adalah program berbasis matlab yang dikenbangkan oleh Garreth Euler dari washington unoversity.\nDi dalamnya terkandung banyak sekali modul-modul untuk pengolahan waveform.\nBrikut adalah cara installasinya.\n","permalink":"http://www.galeri-seismologi.com/post/install-eqcorrscan/","summary":"Seizmo adalah program berbasis matlab yang dikenbangkan oleh Garreth Euler dari washington unoversity.\nDi dalamnya terkandung banyak sekali modul-modul untuk pengolahan waveform.\nBrikut adalah cara installasinya.","title":"Install EQcorrscan"},{"content":"Convert-Metadata Membahas tentang cara merubah format metadata waveform dari xml menjadi dataless\nData seismik yang sering digunakan dalam seismologi adalah berformat seed (Stardard for the Exchange of Earthquake Data). Data seed bersifat praktis dan mudah digunakan dalam banyak penelitian seismologi. Data ini memiliki struktur sederhana yaitu berisi data time series sinyal berikut informasi metadata-nya. Metadata merupakan informasi penting yang mendeskripsikan data time series diantaranya pewaktuan, network, channel, komponen (horizontal dan vertikal), koordinat stasiun dan lain-lain. Informasi tambahan dapat pula ditambahkan pada variabel header seperti koordinat event gempabumi, arrival time beberapa fase sinyal seismik dan lain-lain.\nTerdapat 2 tipe file seed yaitu miniseed dan full seed atau biasa disebut seed. Miniseed adalah versi sederhana dari file seed dimana informasi pada metadata yang terkandung di dalamnya hanya yang utama saja yaitu pewaktuan, network, channel dan komponen. Beberapa server data seismologi ada yang masih menyediakan data dalam fromat seed namun ada juga yang merubah layanannya menjadi hanya menyediakan file miniseed, sedangkan metadatanya disediakan secara terpisah dengan fomat *.txt dan *.xml.\nFormat metadata dapat berupa *.txt dan *.xml dan dapat pula berupa dataless. Metadata dengan format dataless biasanya lebih sering digunakan daripada 2 format sebelumnya. Salah satu fungsi dari metadata berformat dataless adalah sebagai bahan untuk meng-convert data waveform dari format miniseed menjadi seed menggunakan program rdseed dimana dalam proses konversinya membutuhkan tambahan informasi yang terkandung pada file metadata. Makalah singkat ini bertujuan untuk menguraikan cara merubah format metadata stasiun seismik dari format *.xml menjadi format dataless menggunakan program stationxml-seed-converter agar kompatibel dengan program rdseed.\nLangkah pertama adalah mendownload converter di alamat (https://github.com/irisedu/stationxml-seed-converter). Ekstrak dan simpan file converter yang telah berhasil didownload di dalam sebuah direktori pada komputer anda\nLangkah kedua adalah memastikan komputer anda telah terinstall java. Terdapat banyak tutorial cara menginstall java di internet, silakan mencarinya. Apabila sudah menginstall java, lakukan test dengan mengetik perintah (java -version) pada command prompt, apabila muncul seperti Gambar 2 berikut maka komputer anda telah terinstall java dan mampu menjalankan program-program berbasis java.\nLangkah ketiga adalah menyediakan metadata stasiun berformat *.xml. Metadata stasiun dapat didownload salah satunya melalui webdc seperti Gambar 3 di bawah ini. Tentukan telebih dahulu stasiun seismik mana saja yang akan didownload metadatanya, lalu edit start dan end pada isian time window dengan sebarang waktu asalkan masih tercakup dalam waktu beroperasinya stasiun seismik. Pilih Request Type Metadata (StationXML) dan Metadata Level Response lalu tekan submit. Buka tab download lalu pilih save untuk menyimpan file metadata yang telah kita request\n","permalink":"http://www.galeri-seismologi.com/post/convert-metadata/","summary":"Convert-Metadata Membahas tentang cara merubah format metadata waveform dari xml menjadi dataless\nData seismik yang sering digunakan dalam seismologi adalah berformat seed (Stardard for the Exchange of Earthquake Data). Data seed bersifat praktis dan mudah digunakan dalam banyak penelitian seismologi. Data ini memiliki struktur sederhana yaitu berisi data time series sinyal berikut informasi metadata-nya. Metadata merupakan informasi penting yang mendeskripsikan data time series diantaranya pewaktuan, network, channel, komponen (horizontal dan vertikal), koordinat stasiun dan lain-lain.","title":"Convert Metadata"},{"content":"Seisan adalah software yang dikembangkan oleh swiss university\n","permalink":"http://www.galeri-seismologi.com/post/install-seisan/","summary":"Seisan adalah software yang dikembangkan oleh swiss university","title":"Install Seisan"},{"content":"Running Velest  Tahapan ini kita akan belajar cara mengoperasikan program velest.  File yang harus dipersiapkan  AK135.mod berisi nilai kecepatan seismik 1-D sebagai nilai kecepatan awal Palu.cnv berisi nilai travel time observasi hasil konversi pada tahap sebelumnya Palu.sta berisi data stasiun yang digunakan velest program velest untuk relokasi hiposenter ( dijalankan under Linux) velest.cmn berisi setting parameter. Nama file input dan output didefinisikan pada file tersebut.  Langkah-langkah-langkah  Siapkan file-file yang telah disebutkan di atas Buka terminal linux lalu masuk ke dalam folder Relokasi-Velest/\u0026quot;[3] Velest\u0026quot;/ Jalan program velest dengan perintah  1  ./velest   maka akan menghasilkan file  Palu.OUT berisi hasil keseluruhan dari proses relokasi hiposenter yang dilakukan oleh program velest stacor_Palu.OUT bersisi nilai stasiun koreksi velout.MOD berisi nilai kecepatan seimsik 1-D final.  Pindahkan ke-3 file tersebut ke dalam folder Plot Result untuk tahap plotting.  ","permalink":"http://www.galeri-seismologi.com/post/save-part/velest/relokasi-velest-part3-running-velest/","summary":"Running Velest  Tahapan ini kita akan belajar cara mengoperasikan program velest.  File yang harus dipersiapkan  AK135.mod berisi nilai kecepatan seismik 1-D sebagai nilai kecepatan awal Palu.cnv berisi nilai travel time observasi hasil konversi pada tahap sebelumnya Palu.sta berisi data stasiun yang digunakan velest program velest untuk relokasi hiposenter ( dijalankan under Linux) velest.cmn berisi setting parameter. Nama file input dan output didefinisikan pada file tersebut.  Langkah-langkah-langkah  Siapkan file-file yang telah disebutkan di atas Buka terminal linux lalu masuk ke dalam folder Relokasi-Velest/\u0026quot;[3] Velest\u0026quot;/ Jalan program velest dengan perintah  1  .","title":"Relokasi Velest Part 3: Running Velest"},{"content":"Convert input data velest Langkah-langkah konversi data input pada velest serupa dengan simulps12 namun ada sedikit perbedaan.\nLangkah-langkah  Siapkan file Palu.txt. File tersebut adalah hasil filter data sebagaimana dijelaskan langkah-langkahnya berikut Jalankan script cat2event.py dan cat2pha.py dimana masing-masing akan menghasilkan file cat_event_Palu.dat dan Palu.pha  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44   # jalankan skrip ini dengan komputer yg sudah terinstal python 2.x.x  # skrip ini digunakan untuk mengkonversi data buletin BMKG menjadi data input hypodd   # isi nama file input dan output  fileinput = \u0026#39;Palu.txt\u0026#39;  fileoutput = \u0026#39;cat_event_Palu.dat\u0026#39;   # baca isi file input dan buka file output  file = open(fileinput,\u0026#39;r\u0026#39;)  baris = file.readlines()  for i in range(len(baris)):  baris[i]=baris[i].split()  file.close()  file = open(fileoutput,\u0026#39;w\u0026#39;)   # catat tiap baris file input ke file output  i = 0  event =0  while i \u0026lt; len(baris):  if len(baris[i])\u0026gt;0 and baris[i][0]==\u0026#39;Origin:\u0026#39;:  event = event+1  eventid = baris[i+1][2][3::]  tahun = baris[i+2][1].split(\u0026#39;-\u0026#39;)[0]  bulan = baris[i+2][1].split(\u0026#39;-\u0026#39;)[1].zfill(2)  tanggal = baris[i+2][1].split(\u0026#39;-\u0026#39;)[2].zfill(2)  jam = baris[i+3][1].split(\u0026#39;:\u0026#39;)[0].zfill(2)  menit = baris[i+3][1].split(\u0026#39;:\u0026#39;)[1].zfill(2)  detik = ((\u0026#39;%.1f\u0026#39;)%float(baris[i+3][1].split(\u0026#39;:\u0026#39;)[2])).zfill(4)  lintang = ((\u0026#39;%.2f\u0026#39;)%float(baris[i+4][1])).zfill(6)  bujur = ((\u0026#39;%.2f\u0026#39;)%float(baris[i+5][1])).zfill(6)  depth = (\u0026#39;%.1f\u0026#39;)%float(baris[i+6][1])  mag = (\u0026#39;%.1f\u0026#39;)%float(baris[i+15][1])  #mag = \u0026#39;0.0\u0026#39;  az = (\u0026#39;%.2f\u0026#39;)%float(baris[i+13][2])  unknown = \u0026#39;0.0\u0026#39;  rms = (\u0026#39;%.3f\u0026#39;)%float(baris[i+12][2])  time0 = float(detik)+float(menit)*60+float(jam)*60*60+float(tanggal)*60*60*24  file.write(tahun.rjust(5)+bulan.rjust(3)+tanggal.rjust(3)+jam.rjust(3)+  menit.rjust(3)+detik.rjust(5)+lintang.rjust(8)+bujur.rjust(10)+  depth.rjust(9)+mag.rjust(5)+unknown.rjust(6)+az.rjust(9)+  rms.rjust(8)+str(event).rjust(10)+\u0026#39;\\n\u0026#39;)   i = i+1  file.close()   Siapkan file data stasiun Palu_sta.txt dengan format (nama_stasiun lat lon) Jalankan script Velest.m pada Matlab. Tunggu beberapa saat mka akan dihasilkan file Palu.cnv  Catatan Nama file iput dan output harus di edit atau di sesuaikan dengan nama data anda ( Lihat script dengan text editor)\nhttps://github.\n","permalink":"http://www.galeri-seismologi.com/post/save-part/velest/relokasi-velest-part2-convert-data/","summary":"Convert input data velest Langkah-langkah konversi data input pada velest serupa dengan simulps12 namun ada sedikit perbedaan.\nLangkah-langkah  Siapkan file Palu.txt. File tersebut adalah hasil filter data sebagaimana dijelaskan langkah-langkahnya berikut Jalankan script cat2event.py dan cat2pha.py dimana masing-masing akan menghasilkan file cat_event_Palu.dat dan Palu.pha  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44   # jalankan skrip ini dengan komputer yg sudah terinstal python 2.","title":"Relokasi Velest Part 2: Convert Data"},{"content":"Miniconda\n","permalink":"http://www.galeri-seismologi.com/post/install-miniconda/","summary":"Miniconda","title":"Install miniconda"},{"content":"Relokasi-Velest Begian ini adalah pendahuluan untuk menampilkan daerah penelitian yaitu daerah Palu Sulawesi Tengah dimana pada tanggal 28 September 2018 telah terjadi gempabumi dengan Mw 7.1 serta menimbulkan tsunami dan liquifaksi yang menlan ribuan korban jiwa.\nBeberapa bagian pada tutorial selalu di awali dengan filter data karena agar lebih praktis kita menyediakan sebuah data arrival time secara utuh untuk kegempaan seluruh indonesia yang kemudian akan di filter berdasarkan area penelitian tertentu.\nBerikut adala tampilan setelah kita menjalankan script Research_Area.bat Keterangan  Bintang warna merah adalah episenter gempabumi utama Mw 7.1, 28 September 2018 Segitiga tebalik warna kuning adalah stasiun yang digunakan dalam penelitian Garis warna biru dengan label huruf adalah garis cross-section dimana irisan seismisitas akan di tampilkan Segitiga warna merah adalah gunung api Garis merah adalah sesar Bathymetri yang digunakakan adalah srtm_15  ","permalink":"http://www.galeri-seismologi.com/post/save-part/velest/relokasi-velest-part1-data-preparation/","summary":"Relokasi-Velest Begian ini adalah pendahuluan untuk menampilkan daerah penelitian yaitu daerah Palu Sulawesi Tengah dimana pada tanggal 28 September 2018 telah terjadi gempabumi dengan Mw 7.1 serta menimbulkan tsunami dan liquifaksi yang menlan ribuan korban jiwa.\nBeberapa bagian pada tutorial selalu di awali dengan filter data karena agar lebih praktis kita menyediakan sebuah data arrival time secara utuh untuk kegempaan seluruh indonesia yang kemudian akan di filter berdasarkan area penelitian tertentu.","title":"Relokasi Velest Part 1: Data Preparation"},{"content":"Relokasi-Velest Begian ini adalah pendahuluan untuk menampilkan daerah penelitian yaitu daerah Palu Sulawesi Tengah dimana pada tanggal 28 September 2018 telah terjadi gempabumi dengan Mw 7.1 serta menimbulkan tsunami dan liquifaksi yang menlan ribuan korban jiwa.\nBeberapa bagian pada tutorial selalu di awali dengan filter data karena agar lebih praktis kita menyediakan sebuah data arrival time secara utuh untuk kegempaan seluruh indonesia yang kemudian akan di filter berdasarkan area penelitian tertentu.\nBerikut adala tampilan setelah kita menjalankan script Research_Area.bat Keterangan  Bintang warna merah adalah episenter gempabumi utama Mw 7.1, 28 September 2018 Segitiga tebalik warna kuning adalah stasiun yang digunakan dalam penelitian Garis warna biru dengan label huruf adalah garis cross-section dimana irisan seismisitas akan di tampilkan Segitiga warna merah adalah gunung api Garis merah adalah sesar Bathymetri yang digunakakan adalah srtm_15  Relokasi-Velest Berisi tutorial melakukan relokasi hiposenter gempabumi menggunakan software Velest\nData  Data yang digunakan adalah data arrival time repository gempabumi BMKG tahun 2018. Kasus yang digunakan adalah gempabumi Palu 2018.  Software-software yang digunakan yaitu :  Python dan Matlab Untuk konversi format data GMT Untuk visualisasi hasil (tutorial ini menggunakan GMT4) Velest Program utama relokasi hiposenter Notepad++ Untuk menampilkan meng-edit script maupun hasil program. Dapat juga menggunaakan text editor lain sesuai keinginan Virtual Box yang berisi Linux Ubuntu 12 LTS Untuk menjalankan program velest  Langkah-langkah :  Filter Data Tahap pendahuluan untuk menampilkan peta daerah penelitian Convert Data berisi tentang cara konversi format data menjadi format input velest Velest berisi tentang cara menjalankan program Velest Plot Relocated EQ berisi tentang cara melakukan plotting hiposenter hasil relokasi Plot Residuals berisi tentang cara melakukan plotting residual yaitu nilai selisih antara travel time observasi dan teoritis Plot 1-D Velocity Modelberisi tentang cara melakukan plotting hasil pemodelan kecepatan 1-D Plot Vektor Pergeseran berisi tentang cara melakukan plotting vektor pergeseran hiposenter antara sebelum dan sesudah relokasi  Untuk dapat menjalankan tutorial ini dengan baik maka persiapkan dan install terlebih dahulu beberapa software pendukung.\nConvert input data velest Langkah-langkah konversi data input pada velest serupa dengan simulps12 namun ada sedikit perbedaan.\nLangkah-langkah  Siapkan file Palu.txt. File tersebut adalah hasil filter data sebagaimana dijelaskan langkah-langkahnya berikut Jalankan script cat2event.py dan cat2pha.py dimana masing-masing akan menghasilkan file cat_event_Palu.dat dan Palu.pha  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44   # jalankan skrip ini dengan komputer yg sudah terinstal python 2.x.x  # skrip ini digunakan untuk mengkonversi data buletin BMKG menjadi data input hypodd   # isi nama file input dan output  fileinput = \u0026#39;Palu.txt\u0026#39;  fileoutput = \u0026#39;cat_event_Palu.dat\u0026#39;   # baca isi file input dan buka file output  file = open(fileinput,\u0026#39;r\u0026#39;)  baris = file.readlines()  for i in range(len(baris)):  baris[i]=baris[i].split()  file.close()  file = open(fileoutput,\u0026#39;w\u0026#39;)   # catat tiap baris file input ke file output  i = 0  event =0  while i \u0026lt; len(baris):  if len(baris[i])\u0026gt;0 and baris[i][0]==\u0026#39;Origin:\u0026#39;:  event = event+1  eventid = baris[i+1][2][3::]  tahun = baris[i+2][1].split(\u0026#39;-\u0026#39;)[0]  bulan = baris[i+2][1].split(\u0026#39;-\u0026#39;)[1].zfill(2)  tanggal = baris[i+2][1].split(\u0026#39;-\u0026#39;)[2].zfill(2)  jam = baris[i+3][1].split(\u0026#39;:\u0026#39;)[0].zfill(2)  menit = baris[i+3][1].split(\u0026#39;:\u0026#39;)[1].zfill(2)  detik = ((\u0026#39;%.1f\u0026#39;)%float(baris[i+3][1].split(\u0026#39;:\u0026#39;)[2])).zfill(4)  lintang = ((\u0026#39;%.2f\u0026#39;)%float(baris[i+4][1])).zfill(6)  bujur = ((\u0026#39;%.2f\u0026#39;)%float(baris[i+5][1])).zfill(6)  depth = (\u0026#39;%.1f\u0026#39;)%float(baris[i+6][1])  mag = (\u0026#39;%.1f\u0026#39;)%float(baris[i+15][1])  #mag = \u0026#39;0.0\u0026#39;  az = (\u0026#39;%.2f\u0026#39;)%float(baris[i+13][2])  unknown = \u0026#39;0.0\u0026#39;  rms = (\u0026#39;%.3f\u0026#39;)%float(baris[i+12][2])  time0 = float(detik)+float(menit)*60+float(jam)*60*60+float(tanggal)*60*60*24  file.write(tahun.rjust(5)+bulan.rjust(3)+tanggal.rjust(3)+jam.rjust(3)+  menit.rjust(3)+detik.rjust(5)+lintang.rjust(8)+bujur.rjust(10)+  depth.rjust(9)+mag.rjust(5)+unknown.rjust(6)+az.rjust(9)+  rms.rjust(8)+str(event).rjust(10)+\u0026#39;\\n\u0026#39;)   i = i+1  file.close()   Siapkan file data stasiun Palu_sta.txt dengan format (nama_stasiun lat lon) Jalankan script Velest.m pada Matlab. Tunggu beberapa saat mka akan dihasilkan file Palu.cnv  Catatan Nama file iput dan output harus di edit atau di sesuaikan dengan nama data anda ( Lihat script dengan text editor)\nhttps://github.\nRunning Velest  Tahapan ini kita akan belajar cara mengoperasikan program velest.  File yang harus dipersiapkan  AK135.mod berisi nilai kecepatan seismik 1-D sebagai nilai kecepatan awal Palu.cnv berisi nilai travel time observasi hasil konversi pada tahap sebelumnya Palu.sta berisi data stasiun yang digunakan velest program velest untuk relokasi hiposenter ( dijalankan under Linux) velest.cmn berisi setting parameter. Nama file input dan output didefinisikan pada file tersebut.  Langkah-langkah-langkah  Siapkan file-file yang telah disebutkan di atas Buka terminal linux lalu masuk ke dalam folder Relokasi-Velest/\u0026quot;[3] Velest\u0026quot;/ Jalan program velest dengan perintah  1  ./velest   maka akan menghasilkan file  Palu.OUT berisi hasil keseluruhan dari proses relokasi hiposenter yang dilakukan oleh program velest stacor_Palu.OUT bersisi nilai stasiun koreksi velout.MOD berisi nilai kecepatan seimsik 1-D final.  Pindahkan ke-3 file tersebut ke dalam folder Plot Result untuk tahap plotting.  Berisi tutorial melakukan relokasi hiposenter gempabumi menggunakan software Velest\n##","permalink":"http://www.galeri-seismologi.com/post/relokasi_velest/","summary":"\u003ch1 id=\"relokasi-velest\"\u003eRelokasi-Velest\u003c/h1\u003e\n\u003cp\u003eBegian ini adalah pendahuluan untuk menampilkan daerah penelitian yaitu daerah Palu Sulawesi Tengah dimana pada tanggal 28 September 2018 telah terjadi gempabumi dengan Mw 7.1 serta menimbulkan tsunami dan liquifaksi yang menlan ribuan korban jiwa.\u003c/p\u003e\n\u003cp\u003eBeberapa bagian pada tutorial selalu di awali dengan filter data karena agar lebih praktis kita menyediakan sebuah data arrival time secara utuh untuk kegempaan seluruh indonesia yang kemudian akan di filter berdasarkan area penelitian tertentu.\u003c/p\u003e\n\u003ch4 id=\"berikut-adala-tampilan-setelah-kita-menjalankan-script-research_areabat\"\u003eBerikut adala tampilan setelah kita menjalankan script \u003ccode\u003eResearch_Area.bat\u003c/code\u003e\u003c/h4\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://user-images.githubusercontent.com/28419810/164952428-3f499c8a-244f-4440-97df-8de974063b2e.png\" alt=\"Palu\"  /\u003e\n\u003c/p\u003e\n\u003ch3 id=\"keterangan\"\u003eKeterangan\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eBintang warna merah\u003c/code\u003e adalah episenter gempabumi utama Mw 7.1, 28 September 2018\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSegitiga tebalik warna kuning\u003c/code\u003e adalah stasiun yang digunakan dalam penelitian\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGaris warna biru dengan label huruf\u003c/code\u003e adalah garis cross-section dimana irisan seismisitas akan di tampilkan\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSegitiga warna merah\u003c/code\u003e adalah gunung api\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGaris merah\u003c/code\u003e adalah sesar\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eBathymetri\u003c/code\u003e yang digunakakan adalah srtm_15\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"relokasi-velest-1\"\u003eRelokasi-Velest\u003c/h1\u003e\n\u003cp\u003eBerisi tutorial melakukan relokasi hiposenter gempabumi menggunakan software Velest\u003c/p\u003e\n\u003ch2 id=\"data\"\u003eData\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eData yang digunakan adalah data arrival time repository gempabumi BMKG tahun 2018.\u003c/li\u003e\n\u003cli\u003eKasus yang digunakan adalah gempabumi Palu 2018.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"software-software-yang-digunakan-yaitu-\"\u003eSoftware-software yang digunakan yaitu :\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.python.org/\"\u003ePython\u003c/a\u003e dan \u003ccode\u003eMatlab\u003c/code\u003e Untuk konversi format data\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.generic-mapping-tools.org/\"\u003eGMT\u003c/a\u003e Untuk visualisasi hasil  (tutorial ini menggunakan GMT4)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eVelest\u003c/code\u003e Program utama relokasi hiposenter\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://notepad-plus-plus.org/downloads/\"\u003eNotepad++\u003c/a\u003e Untuk menampilkan meng-edit script maupun hasil program. Dapat juga menggunaakan text editor lain sesuai keinginan\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eVirtual Box\u003c/code\u003e yang berisi \u003ccode\u003eLinux Ubuntu 12 LTS\u003c/code\u003e Untuk menjalankan program velest\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"langkah-langkah-\"\u003eLangkah-langkah :\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/muhajiranshori/Relokasi-Velest/tree/main/%5B1%5D%20Research%20Area\"\u003eFilter Data\u003c/a\u003e Tahap pendahuluan untuk menampilkan peta daerah penelitian\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/muhajiranshori/Relokasi-Velest/tree/main/%5B2%5D%20Convert%20Data\"\u003eConvert Data\u003c/a\u003e berisi tentang cara konversi format data menjadi format input velest\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/muhajiranshori/Relokasi-Velest/tree/main/%5B3%5D%20Velest\"\u003eVelest\u003c/a\u003e berisi tentang cara menjalankan program Velest\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/muhajiranshori/Relokasi-Velest/tree/main/%5B4%5D%20Plot%20Relocated%20EQ\"\u003ePlot Relocated EQ\u003c/a\u003e berisi tentang cara melakukan plotting hiposenter hasil relokasi\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/muhajiranshori/Relokasi-Velest/tree/main/%5B5%5D%20Plot%20Residuals\"\u003ePlot Residuals\u003c/a\u003e berisi tentang cara melakukan plotting residual yaitu nilai selisih antara travel time observasi dan teoritis\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/muhajiranshori/Relokasi-Velest/tree/main/%5B6%5D%20Plot%201-D%20Velocity%20Model\"\u003ePlot 1-D Velocity Model\u003c/a\u003eberisi tentang cara melakukan plotting hasil pemodelan kecepatan 1-D\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/muhajiranshori/Relokasi-Velest/tree/main/%5B7%5D%20Vektor%20Pergeseran%20Hiposenter\"\u003ePlot Vektor Pergeseran\u003c/a\u003e berisi tentang cara melakukan plotting vektor pergeseran hiposenter antara sebelum dan sesudah relokasi\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eUntuk dapat menjalankan tutorial ini dengan baik maka persiapkan dan install terlebih dahulu beberapa software pendukung.\u003c/p\u003e\n\u003ch1 id=\"convert-input-data-velest\"\u003eConvert input data velest\u003c/h1\u003e\n\u003cp\u003eLangkah-langkah konversi data input pada velest serupa dengan simulps12 namun ada sedikit perbedaan.\u003c/p\u003e\n\u003ch1 id=\"langkah-langkah\"\u003eLangkah-langkah\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003eSiapkan file \u003ccode\u003ePalu.txt\u003c/code\u003e. File tersebut adalah hasil filter data sebagaimana dijelaskan langkah-langkahnya  \u003ca href=\"https://github.com/muhajiranshori/Tomografi-Simulps12/tree/main/%5B1%5D%20Filer%20Katalog\"\u003eberikut\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eJalankan script \u003ccode\u003ecat2event.py\u003c/code\u003e dan \u003ccode\u003ecat2pha.py\u003c/code\u003e dimana masing-masing akan menghasilkan file \u003ccode\u003ecat_event_Palu.dat\u003c/code\u003e dan \u003ccode\u003ePalu.pha\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-1\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-1\"\u003e 1\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-2\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-2\"\u003e 2\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-3\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-3\"\u003e 3\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-4\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-4\"\u003e 4\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-5\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-5\"\u003e 5\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-6\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-6\"\u003e 6\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-7\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-7\"\u003e 7\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-8\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-8\"\u003e 8\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-9\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-9\"\u003e 9\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-10\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-10\"\u003e10\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-11\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-11\"\u003e11\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-12\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-12\"\u003e12\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-13\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-13\"\u003e13\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-14\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-14\"\u003e14\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-15\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-15\"\u003e15\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-16\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-16\"\u003e16\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-17\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-17\"\u003e17\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-18\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-18\"\u003e18\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-19\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-19\"\u003e19\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-20\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-20\"\u003e20\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-21\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-21\"\u003e21\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-22\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-22\"\u003e22\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-23\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-23\"\u003e23\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-24\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-24\"\u003e24\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-25\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-25\"\u003e25\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-26\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-26\"\u003e26\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-27\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-27\"\u003e27\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-28\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-28\"\u003e28\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-29\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-29\"\u003e29\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-30\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-30\"\u003e30\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-31\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-31\"\u003e31\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-32\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-32\"\u003e32\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-33\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-33\"\u003e33\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-34\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-34\"\u003e34\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-35\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-35\"\u003e35\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-36\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-36\"\u003e36\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-37\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-37\"\u003e37\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-38\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-38\"\u003e38\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-39\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-39\"\u003e39\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-40\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-40\"\u003e40\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-41\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-41\"\u003e41\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-42\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-42\"\u003e42\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-43\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-43\"\u003e43\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-0-44\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-0-44\"\u003e44\u003c/a\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#007f7f\"\u003e# jalankan skrip ini dengan komputer yg sudah terinstal python 2.x.x\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#007f7f\"\u003e# skrip ini digunakan untuk mengkonversi data buletin BMKG menjadi data input hypodd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#007f7f\"\u003e# isi nama file input dan output\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  fileinput = \u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;Palu.txt\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  fileoutput = \u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;cat_event_Palu.dat\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#007f7f\"\u003e# baca isi file input dan buka file output\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  file = \u003cspan style=\"color:#fff;font-weight:bold\"\u003eopen\u003c/span\u003e(fileinput,\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;r\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  baris = file.readlines()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#fff;font-weight:bold\"\u003efor\u003c/span\u003e i in \u003cspan style=\"color:#fff;font-weight:bold\"\u003erange\u003c/span\u003e(\u003cspan style=\"color:#fff;font-weight:bold\"\u003elen\u003c/span\u003e(baris)):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \tbaris[i]=baris[i].split()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  file.close()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  file = \u003cspan style=\"color:#fff;font-weight:bold\"\u003eopen\u003c/span\u003e(fileoutput,\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;w\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#007f7f\"\u003e# catat tiap baris file input ke file output\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  i = \u003cspan style=\"color:#ff0;font-weight:bold\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  event =\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#fff;font-weight:bold\"\u003ewhile\u003c/span\u003e i \u0026lt; \u003cspan style=\"color:#fff;font-weight:bold\"\u003elen\u003c/span\u003e(baris):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\u003cspan style=\"color:#fff;font-weight:bold\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#fff;font-weight:bold\"\u003elen\u003c/span\u003e(baris[i])\u0026gt;\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e0\u003c/span\u003e and baris[i][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e0\u003c/span\u003e]==\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;Origin:\u0026#39;\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tevent = event+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\teventid = baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e3\u003c/span\u003e::]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\ttahun = baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e].split(\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;-\u0026#39;\u003c/span\u003e)[\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e0\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tbulan = baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e].split(\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;-\u0026#39;\u003c/span\u003e)[\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e].zfill(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\ttanggal = baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e].split(\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;-\u0026#39;\u003c/span\u003e)[\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e].zfill(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tjam = baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e3\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e].split(\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e)[\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e0\u003c/span\u003e].zfill(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tmenit = baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e3\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e].split(\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e)[\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e].zfill(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tdetik = ((\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e%.1f\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e)%\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e3\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e].split(\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e)[\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e])).zfill(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e4\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tlintang = ((\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e%.2f\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e)%\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e4\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e])).zfill(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e6\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tbujur = ((\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e%.2f\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e)%\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e5\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e])).zfill(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e6\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tdepth = (\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e%.1f\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e)%\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e6\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tmag = (\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e%.1f\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e)%\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e15\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\t\u003cspan style=\"color:#007f7f\"\u003e#mag = \u0026#39;0.0\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\taz = (\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e%.2f\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e)%\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e13\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tunknown = \u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;0.0\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\trms = (\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e%.3f\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e)%\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(baris[i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e12\u003c/span\u003e][\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e2\u003c/span\u003e])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\ttime0 = \u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(detik)+\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(menit)*\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e60\u003c/span\u003e+\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(jam)*\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e60\u003c/span\u003e*\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e60\u003c/span\u003e+\u003cspan style=\"color:#fff;font-weight:bold\"\u003efloat\u003c/span\u003e(tanggal)*\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e60\u003c/span\u003e*\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e60\u003c/span\u003e*\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e24\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\tfile.write(tahun.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e5\u003c/span\u003e)+bulan.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e3\u003c/span\u003e)+tanggal.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e3\u003c/span\u003e)+jam.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e3\u003c/span\u003e)+\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\t\tmenit.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e3\u003c/span\u003e)+detik.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e5\u003c/span\u003e)+lintang.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e8\u003c/span\u003e)+bujur.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e10\u003c/span\u003e)+\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\t\tdepth.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e9\u003c/span\u003e)+mag.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e5\u003c/span\u003e)+unknown.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e6\u003c/span\u003e)+az.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e9\u003c/span\u003e)+\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\t\trms.rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e8\u003c/span\u003e)+\u003cspan style=\"color:#fff;font-weight:bold\"\u003estr\u003c/span\u003e(event).rjust(\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e10\u003c/span\u003e)+\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\\n\u003c/span\u003e\u003cspan style=\"color:#0ff;font-weight:bold\"\u003e\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \t\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \ti = i+\u003cspan style=\"color:#ff0;font-weight:bold\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  file.close()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eSiapkan file data stasiun \u003ccode\u003ePalu_sta.txt\u003c/code\u003e dengan format (nama_stasiun lat lon)\u003c/li\u003e\n\u003cli\u003eJalankan script \u003ccode\u003eVelest.m\u003c/code\u003e pada Matlab.\u003c/li\u003e\n\u003cli\u003eTunggu beberapa saat mka akan dihasilkan file \u003ccode\u003ePalu.cnv\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"catatan\"\u003eCatatan\u003c/h2\u003e\n\u003cp\u003eNama file iput dan output harus di edit atau di sesuaikan dengan nama data anda ( Lihat script dengan text editor)\u003c/p\u003e\n\u003cp\u003ehttps://github.\u003c/p\u003e\n\u003ch1 id=\"running-velest\"\u003eRunning Velest\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eTahapan ini kita akan belajar cara mengoperasikan program velest.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"file-yang-harus-dipersiapkan\"\u003eFile yang harus dipersiapkan\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eAK135.mod\u003c/code\u003e berisi nilai kecepatan seismik 1-D sebagai nilai kecepatan awal\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePalu.cnv\u003c/code\u003e berisi nilai travel time observasi hasil konversi pada tahap \u003ca href=\"https://github.com/muhajiranshori/Relokasi-Velest/tree/main/%5B2%5D%20Convert%20Data\"\u003esebelumnya\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePalu.sta\u003c/code\u003e berisi data stasiun yang digunakan\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003evelest\u003c/code\u003e program velest untuk relokasi hiposenter ( dijalankan under Linux)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003evelest.cmn\u003c/code\u003e berisi setting parameter. Nama file input dan output didefinisikan pada file tersebut.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"langkah-langkah-langkah\"\u003eLangkah-langkah-langkah\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003eSiapkan file-file yang telah disebutkan di atas\u003c/li\u003e\n\u003cli\u003eBuka terminal linux lalu masuk ke dalam folder \u003ccode\u003eRelokasi-Velest/\u0026quot;[3] Velest\u0026quot;/\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eJalan program \u003ccode\u003evelest\u003c/code\u003e dengan perintah\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272\" id=\"hl-1-1\"\u003e\u003ca style=\"outline: none; text-decoration:none; color:inherit\" href=\"#hl-1-1\"\u003e1\u003c/a\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e./velest\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch2 id=\"maka-akan-menghasilkan-file\"\u003emaka akan menghasilkan file\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ePalu.OUT\u003c/code\u003e berisi hasil keseluruhan dari proses relokasi hiposenter yang dilakukan oleh program \u003ccode\u003evelest\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estacor_Palu.OUT\u003c/code\u003e bersisi nilai stasiun koreksi\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003evelout.MOD\u003c/code\u003e berisi nilai kecepatan seimsik 1-D final.\u003c/li\u003e\n\u003c/ul\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003ePindahkan ke-3 file tersebut ke dalam folder \u003ccode\u003ePlot Result\u003c/code\u003e untuk tahap plotting.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eBerisi tutorial melakukan relokasi hiposenter gempabumi menggunakan software Velest\u003c/p\u003e\n\u003cp\u003e#\u003cimg loading=\"lazy\" src=\"https://user-images.githubusercontent.com/28419810/108987074-72b48480-76c5-11eb-9614-93cdd540031c\" alt=\"Palu_awal\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e#\u003cimg loading=\"lazy\" src=\"https://user-images.githubusercontent.com/28419810/108987090-7942fc00-76c5-11eb-9ee7-7d81d968ac46\" alt=\"Palu_final\"  /\u003e\n\u003c/p\u003e","title":"Relokasi_velest"},{"content":"Membahas tutorial relokasi hiposenter menggunakan software HypoDD\n","permalink":"http://www.galeri-seismologi.com/post/save-part/hypodd/relokasi-hypodd-part4-plot-hasil/","summary":"Membahas tutorial relokasi hiposenter menggunakan software HypoDD","title":"Relokasi Hypodd Part 4: Plot Hasil"},{"content":"Running HypoDD  Tahapan ini adalah bagian inti dari relokasi hiposenter dengan Metode Double Difference yaitu running program HypoDD.  File yang harus dipersiapkan file di luar folder  station.dat berisi informasi stasiun yang digunakan. Jatim.pha berisi nilai travel time observasi yang dihasilkan dari tahap convert_data.  file di dalam folder ph2dt  ph2dt.inp berisi setting parameter ph2dt.exe program untuk menghitung bla bla bla  file di dalam folder hypoDD  hypoDD.inp berisi setting parameter station.dat berisi informasi stasiun yang digunakan. event.dat, event.sel dan dt.ct merupakan file output dari program ph2dt.exe yanng menjadi input pada program hypoDD.exe hypoDD.exe program untuk menghitung melakukan relokasi double difference  Langkah-langkah-langkah  Siapkan file-file yang telah disebutkan di atas Buka terminal cygwin lalu masuk ke dalam folder HypoDD/ph2dt/ Jalan program ph2dt.exe dengan perintah  1  ./ph2dt.exe ph2dt.inp`   maka akan menghasilkan file  event.dat berisi daftar event yang digunakan dalam penelitian. event.sel berisi daftar event yang memenuhi kriteria pada setting parameter ph2dt.inp dt.ct berisi nilai travel time relatif antara pasangan event.  Pindahkan ke-3 file tersebut ke dalam folder HypoDD Ubah direktori kerja terminal cygwin ke dalam folder HypoDD Jalan program hypoDD.exe dengan perintah  1  ./hypoDD.exe`   maka akan menghasilkan file  hypoDD.reloc.001 hypoDD.reloc.001.002 hypoDD.reloc.00n bersisi parameter hiposenter hasil relokasi setep 1, 2 hingga step n hypoDD.reloc berisi parameter final hasil relokasi hypoDD.sta berisi koordinat stasiun yang digunakan dalam relokasi hypoDD.res berisi nilai residuals  Pindahkan file hypoDD.reloc ke dalam folder Plot Result untuk tahap plotting  ","permalink":"http://www.galeri-seismologi.com/post/save-part/hypodd/relokasi-hypodd-part3-running-hypodd/","summary":"Running HypoDD  Tahapan ini adalah bagian inti dari relokasi hiposenter dengan Metode Double Difference yaitu running program HypoDD.  File yang harus dipersiapkan file di luar folder  station.dat berisi informasi stasiun yang digunakan. Jatim.pha berisi nilai travel time observasi yang dihasilkan dari tahap convert_data.  file di dalam folder ph2dt  ph2dt.inp berisi setting parameter ph2dt.exe program untuk menghitung bla bla bla  file di dalam folder hypoDD  hypoDD.","title":"Relokasi Hypodd Part 3: Running HypoDD"},{"content":"Convert input data HypoDD Langkah-langkah konversi data input pada hypoDD.\nLangkah-langkah  Siapkan file Jatim.txt. File tersebut adalah hasil filter data sebagaimana dijelaskan langkah-langkahnya berikut Jalankan script cat2pha.py yang akan menghasilkan file Jatim.pha  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  # jalankan skrip ini dengan komputer yg sudah terinstal python 2.x.x # skrip ini digunakan untuk mengkonversi data buletin BMKG menjadi data input hypodd  # isi nama file input dan output fileinput = \u0026#39;Jatim.txt\u0026#39; fileoutput = \u0026#39;Jatim.pha\u0026#39;  # baca isi file input dan buka file output file = open(fileinput,\u0026#39;r\u0026#39;) baris = file.readlines() for i in range(len(baris)): \tbaris[i]=baris[i].split() file.close() file = open(fileoutput,\u0026#39;w\u0026#39;)  # catat tiap baris file input ke file output i = 0 event =0 while i \u0026lt; len(baris): \tif len(baris[i])\u0026gt;0 and baris[i][0]==\u0026#39;EventID:\u0026#39;: \tevent = event+1 \teventid = baris[i][1][3::] \ttahun = baris[i+2][0].split(\u0026#39;-\u0026#39;)[0] \tbulan = baris[i+2][0].split(\u0026#39;-\u0026#39;)[1].zfill(2) \ttanggal = baris[i+2][0].split(\u0026#39;-\u0026#39;)[2].zfill(2) \tjam = baris[i+2][1].split(\u0026#39;:\u0026#39;)[0].zfill(2) \tmenit = baris[i+2][1].split(\u0026#39;:\u0026#39;)[1].zfill(2) \tdetik = ((\u0026#39;%.1f\u0026#39;)%float(baris[i+2][1].split(\u0026#39;:\u0026#39;)[2])).zfill(4) \tlintang = ((\u0026#39;%.2f\u0026#39;)%float(baris[i+2][2])).zfill(6) \tbujur = ((\u0026#39;%.2f\u0026#39;)%float(baris[i+2][3])).zfill(6) \tdepth = (\u0026#39;%.1f\u0026#39;)%float(baris[i+2][4]) \tmag = (\u0026#39;%.1f\u0026#39;)%float(baris[i+2][5]) \tunknown = \u0026#39;0.0\u0026#39; \trms = (\u0026#39;%.3f\u0026#39;)%float(baris[i+2][10]) \ttime0 = float(detik)+float(menit)*60+float(jam)*60*60+float(tanggal)*60*60*24 \tfile.write(\u0026#39;#\u0026#39;+tahun.rjust(5)+bulan.rjust(3)+tanggal.rjust(3)+jam.rjust(3)+ \tmenit.rjust(3)+detik.rjust(5)+lintang.rjust(8)+bujur.rjust(10)+ \tdepth.rjust(9)+mag.rjust(5)+unknown.rjust(6)+unknown.rjust(6)+ \trms.rjust(8)+str(event).rjust(10)+\u0026#39;\\n\u0026#39;) \tif len(baris[i])\u0026gt;0 and baris[i][0]==\u0026#39;Net\u0026#39;: \ttry: \tj=0 \twhile j\u0026lt;1: \ti=i+1 \ttry: \tidSta = baris[i][1] \tphase = baris[i][2] \ttanggal = baris[i][3].split(\u0026#39;-\u0026#39;)[2] \tjam = baris[i][4].split(\u0026#39;:\u0026#39;)[0] \tmenit = baris[i][4].split(\u0026#39;:\u0026#39;)[1] \tdetik = baris[i][4].split(\u0026#39;:\u0026#39;)[2] \ttime1 = float(detik)+float(menit)*60+float(jam)*60*60+float(tanggal)*60*60*24 \tdeltatime = (\u0026#39;%.2f\u0026#39;)%(time1-time0) \tunknown = \u0026#39;1.000\u0026#39; \tfile.write(idSta.rjust(5)+deltatime.rjust(12)+unknown.rjust(8)+phase.rjust(4)+\u0026#39;\\n\u0026#39;) \texcept: \tbreak\t\texcept: \tbreak \ti = i+1 file.close()   Pindahkan file Jatim.pha tersebut ke dalam folder [3] HypoDD untuk proses selanjutnya.  Catatan Nama file iput dan output harus di edit atau di sesuaikan dengan nama data anda ( Lihat script dengan text editor)\nhttps://github.\n","permalink":"http://www.galeri-seismologi.com/post/save-part/hypodd/relokasi-hypodd-part2-convert-data/","summary":"Convert input data HypoDD Langkah-langkah konversi data input pada hypoDD.\nLangkah-langkah  Siapkan file Jatim.txt. File tersebut adalah hasil filter data sebagaimana dijelaskan langkah-langkahnya berikut Jalankan script cat2pha.py yang akan menghasilkan file Jatim.pha  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  # jalankan skrip ini dengan komputer yg sudah terinstal python 2.","title":"Relokasi Hypodd Part 2: Convert Data"},{"content":"Relokasi-HypoDD Begian ini adalah pendahuluan untuk menampilkan daerah penelitian yaitu daerah Jawa Timur.\n set path=C:\\programs\\GMT4\\bin;%PATH% set F=Jatim.ps set R=109/116/-11.5/-4 set GU=GU.dat set seis=seis.dat set M=mainshock.dat set GA=GA.dat set ST=station.dat set A=volcano.dat set P=E:/Muhajir/GMT/topo_putih.cpt set NC=E:/Muhajir/GMT/srtm_15_indo.grd set NC1=E:/Muhajir/GMT/srtm_15_indo.grd.int set sesar=E:/Muhajir/GMT/sesar.gmt set sesar2=E:/Muhajir/GMT/sesar2.gmt set sesar=E:/Muhajir/GMT/hajir.gmt set sesar2=E:/Muhajir/GMT/sesar2.gmt set SA=SA.d set SB=SB.d set SC=SC.d set LA=lineA.d set LB=lineB.d set LC=lineC.d set EA1=111.7580000 set EA2=-6.00 set CA1=111.7580000 set CA2=-11.00 set EA=%EA1%/%EA2% set CA=%CA1%/%CA2% set EB1=112.9200000 set EB2=-6.00 set CB1=112.9200000 set CB2=-11.00 set EB=%EB1%/%EB2% set CB=%CB1%/%CB2%\tset EC1=114.0000000 set EC2=-6.00 set CC1=114.0000000 set CC2=-11.00 set EC=%EC1%/%EC2% set CC=%CC1%/%CC2%\tpsbasemap -JM12c -R%R% -Ba2WSne:.\u0026quot;:\u0026quot; --HEADER_FONT_SIZE=12 -P -K -Y15 -X2\u0026gt; %F% grdimage %NC% -R -J -C%P% -I%NC1% -V -K -O \u0026gt;\u0026gt; %F% pscoast -V -O -J -R -W1.5 -B2WSne -Lf110.0/-11.0/50/200 -T110/-10.0/0.9i -Slightblue -Df -K \u0026gt;\u0026gt; %F% rem gawk \u0026quot;{ print $8, $7*-1, $9, $10*0.015}\u0026quot; %I% | psxy -R -J -O -Ckedalaman1.cpt -Sci -W1.0 -K \u0026gt;\u0026gt; %F% gawk \u0026quot;{print $2, $1}\u0026quot; %ST% | psxy -JM -R -Si0.20c -W2 -Gyellow -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{print $1, $2}\u0026quot; %A% | psxy -JM -R -St0.15c -W2 -Gred -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{print $1, $2}\u0026quot; %GU% | psxy -JM -R -Sa0.35c -W2 -Gred -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{print $1, $2}\u0026quot; %GA% | psxy -JM -R -St0.35c -W2 -Gred -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{print $1, $2}\u0026quot; %seis% | psxy -JM -R -Si0.35c -W2 -Gyellow -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{ print $8, $7*-1, $10*0.015 }\u0026quot; %M% | psxy -R -J -O -Sci -W2.0 -K \u0026gt;\u0026gt; %F% gawk \u0026quot;{print $1, $2}\u0026quot; %A% | psxy -JM -R -St0.25c -W2 -Gred -O -K \u0026gt;\u0026gt;%F% echo %EA1% %EA2% 10 0 1 LT A'\u0026gt;%LA% echo %CA1% %CA2% 10 0 1 LT A\u0026gt;\u0026gt;%LA% psxy %LA% -JM -R -W4,blue -O -K \u0026gt;\u0026gt;%F% pstext %LA% -JM -R -O -K \u0026gt;\u0026gt;%F% echo %EB1% %EB2% 10 0 1 LT B'\u0026gt;%LB% echo %CB1% %CB2% 10 0 1 LT B\u0026gt;\u0026gt;%LB% psxy %LB% -JM -R -W4,blue -O -K \u0026gt;\u0026gt;%F% pstext %LB% -JM -R -O -K \u0026gt;\u0026gt;%F% echo %EC1% %EC2% 10 0 1 LT C'\u0026gt;%LC% echo %CC1% %CC2% 10 0 1 LT C\u0026gt;\u0026gt;%LC% psxy %LC% -JM -R -W4,blue -O -K \u0026gt;\u0026gt;%F% pstext %LC% -JM -R -O -K \u0026gt;\u0026gt;%F% echo 111 -4 10 0 1 LT \u0026gt; tmp echo 109 -4 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -JM -R -W3,black -O -K \u0026gt;\u0026gt; %F% echo 111 -6.0 10 0 1 LT \u0026gt; tmp echo 111 -4 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -JM -R -W3,black -O -K \u0026gt;\u0026gt; %F% echo 109 -6.0 10 0 1 LT \u0026gt; tmp echo 111 -6.0 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -JM -R -W3,black -O -K \u0026gt;\u0026gt; %F% echo 109 -4 10 0 1 LT \u0026gt; tmp echo 109 -6.0 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -JM -R -W3,black -O -K \u0026gt;\u0026gt; %F% echo 109.5 -4.2 9 0 7 LT Gempa Utama\u0026gt; tmp echo 109.5 -4.5 9 0 7 LT Seismometer \u0026gt;\u0026gt; tmp echo 109.5 -5.7 9 0 7 LT Gunung Api \u0026gt;\u0026gt; tmp pstext tmp -JM -R -O -K \u0026gt;\u0026gt;%F% psxy -R -JM -Wthin -m -O -K -W2 %sesar% \u0026gt;\u0026gt; %F% psxy -R -JM -Wthin -m -O -K -W2 %sesar2% \u0026gt;\u0026gt; %F% echo 109.5 -4.8 9 0 7 LT M 3 \u0026gt; %SA% echo 109.5 -5.1 9 0 7 LT M 4 \u0026gt;\u0026gt; %SB% echo 109.5 -5.4 9 0 7 LT M 5 \u0026gt;\u0026gt; %SC% pstext %SA% -JM -R -O -G -N -K \u0026gt;\u0026gt; %F% pstext %SB% -JM -R -O -G -N -K \u0026gt;\u0026gt; %F% pstext %SC% -JM -R -O -G -N -K \u0026gt;\u0026gt; %F% psbasemap -Jn0.11c -R93/140/-12/10 -B90/90/0.5SEwn --HEADER_FONT_SIZE=2 -P -Y10.130 -X6.85 -O -K \u0026gt;\u0026gt; %F% pscoast -V -O -J -R -W0.4 -B -Df -S77/255/217 -Ggray -K \u0026gt;\u0026gt; %F% echo 108.5 1 6 0 1 LT Kalimantan \u0026gt; tmp echo 108 -6.5 6 0 1 LT Jawa \u0026gt;\u0026gt; tmp echo 98 -1 6 0 1 LT Sumatra \u0026gt;\u0026gt; tmp echo 118 -1 6 0 1 LT Sulawesi \u0026gt;\u0026gt; tmp echo 131 -3 6 0 1 LT Papua \u0026gt;\u0026gt; tmp echo 95 -9 6 0 1 LT Samudra Hindia \u0026gt;\u0026gt; tmp pstext tmp -Jn -R -O -K \u0026gt;\u0026gt;%F% echo 116 -4 10 0 1 LT \u0026gt; tmp echo 109 -4 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -Jn -R -W3,red -O -K \u0026gt;\u0026gt; %F% echo 116 -11 10 0 1 LT \u0026gt; tmp echo 116 -4 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -Jn -R -W3,red -O -K \u0026gt;\u0026gt; %F% echo 109 -11 10 0 1 LT \u0026gt; tmp echo 116 -11 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -Jn -R -W3,red -O -K \u0026gt;\u0026gt; %F% echo 109 -4 10 0 1 LT \u0026gt; tmp echo 109 -11 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -Jn -R -W3,red -O \u0026gt;\u0026gt; %F% ps2raster %F% -A -Tg -P -E1200 del *.d del tmp rem del *.ps  Berikut adala tampilan setelah kita menjalankan script Research_Area.bat Keterangan  Bintang warna merah adalah episenter gempabumi utama Mw 7.1, 28 September 2018 Segitiga tebalik warna kuning adalah stasiun yang digunakan dalam penelitian Garis warna biru dengan label huruf adalah garis cross-section dimana irisan seismisitas akan di tampilkan Segitiga warna merah adalah gunung api Garis merah adalah sesar Bathymetri yang digunakakan adalah srtm_15  ","permalink":"http://www.galeri-seismologi.com/post/save-part/hypodd/relokasi-hypodd-part1-data-preparation/","summary":"Relokasi-HypoDD Begian ini adalah pendahuluan untuk menampilkan daerah penelitian yaitu daerah Jawa Timur.\n set path=C:\\programs\\GMT4\\bin;%PATH% set F=Jatim.ps set R=109/116/-11.5/-4 set GU=GU.dat set seis=seis.dat set M=mainshock.dat set GA=GA.dat set ST=station.dat set A=volcano.dat set P=E:/Muhajir/GMT/topo_putih.cpt set NC=E:/Muhajir/GMT/srtm_15_indo.grd set NC1=E:/Muhajir/GMT/srtm_15_indo.grd.int set sesar=E:/Muhajir/GMT/sesar.gmt set sesar2=E:/Muhajir/GMT/sesar2.gmt set sesar=E:/Muhajir/GMT/hajir.gmt set sesar2=E:/Muhajir/GMT/sesar2.gmt set SA=SA.d set SB=SB.d set SC=SC.d set LA=lineA.d set LB=lineB.d set LC=lineC.d set EA1=111.7580000 set EA2=-6.00 set CA1=111.7580000 set CA2=-11.00 set EA=%EA1%/%EA2% set CA=%CA1%/%CA2% set EB1=112.","title":"Relokasi HypoDD Part 1: Data Preparation"},{"content":"Relokasi-HypoDD Begian ini adalah pendahuluan untuk menampilkan daerah penelitian yaitu daerah Jawa Timur.\n set path=C:\\programs\\GMT4\\bin;%PATH% set F=Jatim.ps set R=109/116/-11.5/-4 set GU=GU.dat set seis=seis.dat set M=mainshock.dat set GA=GA.dat set ST=station.dat set A=volcano.dat set P=E:/Muhajir/GMT/topo_putih.cpt set NC=E:/Muhajir/GMT/srtm_15_indo.grd set NC1=E:/Muhajir/GMT/srtm_15_indo.grd.int set sesar=E:/Muhajir/GMT/sesar.gmt set sesar2=E:/Muhajir/GMT/sesar2.gmt set sesar=E:/Muhajir/GMT/hajir.gmt set sesar2=E:/Muhajir/GMT/sesar2.gmt set SA=SA.d set SB=SB.d set SC=SC.d set LA=lineA.d set LB=lineB.d set LC=lineC.d set EA1=111.7580000 set EA2=-6.00 set CA1=111.7580000 set CA2=-11.00 set EA=%EA1%/%EA2% set CA=%CA1%/%CA2% set EB1=112.9200000 set EB2=-6.00 set CB1=112.9200000 set CB2=-11.00 set EB=%EB1%/%EB2% set CB=%CB1%/%CB2%\tset EC1=114.0000000 set EC2=-6.00 set CC1=114.0000000 set CC2=-11.00 set EC=%EC1%/%EC2% set CC=%CC1%/%CC2%\tpsbasemap -JM12c -R%R% -Ba2WSne:.\u0026quot;:\u0026quot; --HEADER_FONT_SIZE=12 -P -K -Y15 -X2\u0026gt; %F% grdimage %NC% -R -J -C%P% -I%NC1% -V -K -O \u0026gt;\u0026gt; %F% pscoast -V -O -J -R -W1.5 -B2WSne -Lf110.0/-11.0/50/200 -T110/-10.0/0.9i -Slightblue -Df -K \u0026gt;\u0026gt; %F% rem gawk \u0026quot;{ print $8, $7*-1, $9, $10*0.015}\u0026quot; %I% | psxy -R -J -O -Ckedalaman1.cpt -Sci -W1.0 -K \u0026gt;\u0026gt; %F% gawk \u0026quot;{print $2, $1}\u0026quot; %ST% | psxy -JM -R -Si0.20c -W2 -Gyellow -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{print $1, $2}\u0026quot; %A% | psxy -JM -R -St0.15c -W2 -Gred -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{print $1, $2}\u0026quot; %GU% | psxy -JM -R -Sa0.35c -W2 -Gred -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{print $1, $2}\u0026quot; %GA% | psxy -JM -R -St0.35c -W2 -Gred -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{print $1, $2}\u0026quot; %seis% | psxy -JM -R -Si0.35c -W2 -Gyellow -O -K \u0026gt;\u0026gt;%F% gawk \u0026quot;{ print $8, $7*-1, $10*0.015 }\u0026quot; %M% | psxy -R -J -O -Sci -W2.0 -K \u0026gt;\u0026gt; %F% gawk \u0026quot;{print $1, $2}\u0026quot; %A% | psxy -JM -R -St0.25c -W2 -Gred -O -K \u0026gt;\u0026gt;%F% echo %EA1% %EA2% 10 0 1 LT A'\u0026gt;%LA% echo %CA1% %CA2% 10 0 1 LT A\u0026gt;\u0026gt;%LA% psxy %LA% -JM -R -W4,blue -O -K \u0026gt;\u0026gt;%F% pstext %LA% -JM -R -O -K \u0026gt;\u0026gt;%F% echo %EB1% %EB2% 10 0 1 LT B'\u0026gt;%LB% echo %CB1% %CB2% 10 0 1 LT B\u0026gt;\u0026gt;%LB% psxy %LB% -JM -R -W4,blue -O -K \u0026gt;\u0026gt;%F% pstext %LB% -JM -R -O -K \u0026gt;\u0026gt;%F% echo %EC1% %EC2% 10 0 1 LT C'\u0026gt;%LC% echo %CC1% %CC2% 10 0 1 LT C\u0026gt;\u0026gt;%LC% psxy %LC% -JM -R -W4,blue -O -K \u0026gt;\u0026gt;%F% pstext %LC% -JM -R -O -K \u0026gt;\u0026gt;%F% echo 111 -4 10 0 1 LT \u0026gt; tmp echo 109 -4 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -JM -R -W3,black -O -K \u0026gt;\u0026gt; %F% echo 111 -6.0 10 0 1 LT \u0026gt; tmp echo 111 -4 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -JM -R -W3,black -O -K \u0026gt;\u0026gt; %F% echo 109 -6.0 10 0 1 LT \u0026gt; tmp echo 111 -6.0 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -JM -R -W3,black -O -K \u0026gt;\u0026gt; %F% echo 109 -4 10 0 1 LT \u0026gt; tmp echo 109 -6.0 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -JM -R -W3,black -O -K \u0026gt;\u0026gt; %F% echo 109.5 -4.2 9 0 7 LT Gempa Utama\u0026gt; tmp echo 109.5 -4.5 9 0 7 LT Seismometer \u0026gt;\u0026gt; tmp echo 109.5 -5.7 9 0 7 LT Gunung Api \u0026gt;\u0026gt; tmp pstext tmp -JM -R -O -K \u0026gt;\u0026gt;%F% psxy -R -JM -Wthin -m -O -K -W2 %sesar% \u0026gt;\u0026gt; %F% psxy -R -JM -Wthin -m -O -K -W2 %sesar2% \u0026gt;\u0026gt; %F% echo 109.5 -4.8 9 0 7 LT M 3 \u0026gt; %SA% echo 109.5 -5.1 9 0 7 LT M 4 \u0026gt;\u0026gt; %SB% echo 109.5 -5.4 9 0 7 LT M 5 \u0026gt;\u0026gt; %SC% pstext %SA% -JM -R -O -G -N -K \u0026gt;\u0026gt; %F% pstext %SB% -JM -R -O -G -N -K \u0026gt;\u0026gt; %F% pstext %SC% -JM -R -O -G -N -K \u0026gt;\u0026gt; %F% psbasemap -Jn0.11c -R93/140/-12/10 -B90/90/0.5SEwn --HEADER_FONT_SIZE=2 -P -Y10.130 -X6.85 -O -K \u0026gt;\u0026gt; %F% pscoast -V -O -J -R -W0.4 -B -Df -S77/255/217 -Ggray -K \u0026gt;\u0026gt; %F% echo 108.5 1 6 0 1 LT Kalimantan \u0026gt; tmp echo 108 -6.5 6 0 1 LT Jawa \u0026gt;\u0026gt; tmp echo 98 -1 6 0 1 LT Sumatra \u0026gt;\u0026gt; tmp echo 118 -1 6 0 1 LT Sulawesi \u0026gt;\u0026gt; tmp echo 131 -3 6 0 1 LT Papua \u0026gt;\u0026gt; tmp echo 95 -9 6 0 1 LT Samudra Hindia \u0026gt;\u0026gt; tmp pstext tmp -Jn -R -O -K \u0026gt;\u0026gt;%F% echo 116 -4 10 0 1 LT \u0026gt; tmp echo 109 -4 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -Jn -R -W3,red -O -K \u0026gt;\u0026gt; %F% echo 116 -11 10 0 1 LT \u0026gt; tmp echo 116 -4 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -Jn -R -W3,red -O -K \u0026gt;\u0026gt; %F% echo 109 -11 10 0 1 LT \u0026gt; tmp echo 116 -11 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -Jn -R -W3,red -O -K \u0026gt;\u0026gt; %F% echo 109 -4 10 0 1 LT \u0026gt; tmp echo 109 -11 10 0 1 LT \u0026gt;\u0026gt; tmp psxy tmp -Jn -R -W3,red -O \u0026gt;\u0026gt; %F% ps2raster %F% -A -Tg -P -E1200 del *.d del tmp rem del *.ps  Berikut adala tampilan setelah kita menjalankan script Research_Area.bat Keterangan  Bintang warna merah adalah episenter gempabumi utama Mw 7.1, 28 September 2018 Segitiga tebalik warna kuning adalah stasiun yang digunakan dalam penelitian Garis warna biru dengan label huruf adalah garis cross-section dimana irisan seismisitas akan di tampilkan Segitiga warna merah adalah gunung api Garis merah adalah sesar Bathymetri yang digunakakan adalah srtm_15  Relokasi-HypoDD Kali ini kita akan membahas tutorial relokasi hiposenter menggunakan program HypoDD\nData  Data yang digunakan adalah data arrival time repository gempabumi BMKG daerah Jawa Timur tahun 2009 -2017.  Software-software yang digunakan yaitu :  Python dan Matlab Untuk konversi format data GMT Untuk visualisasi hasil (tutorial ini menggunakan GMT4) HypoDD Program utama relokasi hiposenter Notepad++ Untuk menampilkan meng-edit script maupun hasil program. Dapat juga menggunaakan text editor lain sesuai keinginan Cygwin Untuk menjalankan program HypoDD  Langkah-langkah :  Filter Data Tahap pendahuluan untuk menampilkan peta daerah penelitian Convert Data berisi tentang cara konversi format data menjadi format input HypoDD HypoDD berisi tentang cara menjalankan program HypoDD Plot Hasil berisi tentang cara melakukan plotting hiposenter hasil relokasi  Untuk dapat menjalankan tutorial ini dengan baik maka persiapkan dan install terlebih dahulu beberapa software pendukung.\nConvert input data HypoDD Langkah-langkah konversi data input pada hypoDD.\nLangkah-langkah  Siapkan file Jatim.txt. File tersebut adalah hasil filter data sebagaimana dijelaskan langkah-langkahnya berikut Jalankan script cat2pha.py yang akan menghasilkan file Jatim.pha  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  # jalankan skrip ini dengan komputer yg sudah terinstal python 2.x.x # skrip ini digunakan untuk mengkonversi data buletin BMKG menjadi data input hypodd  # isi nama file input dan output fileinput = \u0026#39;Jatim.txt\u0026#39; fileoutput = \u0026#39;Jatim.pha\u0026#39;  # baca isi file input dan buka file output file = open(fileinput,\u0026#39;r\u0026#39;) baris = file.readlines() for i in range(len(baris)): \tbaris[i]=baris[i].split() file.close() file = open(fileoutput,\u0026#39;w\u0026#39;)  # catat tiap baris file input ke file output i = 0 event =0 while i \u0026lt; len(baris): \tif len(baris[i])\u0026gt;0 and baris[i][0]==\u0026#39;EventID:\u0026#39;: \tevent = event+1 \teventid = baris[i][1][3::] \ttahun = baris[i+2][0].split(\u0026#39;-\u0026#39;)[0] \tbulan = baris[i+2][0].split(\u0026#39;-\u0026#39;)[1].zfill(2) \ttanggal = baris[i+2][0].split(\u0026#39;-\u0026#39;)[2].zfill(2) \tjam = baris[i+2][1].split(\u0026#39;:\u0026#39;)[0].zfill(2) \tmenit = baris[i+2][1].split(\u0026#39;:\u0026#39;)[1].zfill(2) \tdetik = ((\u0026#39;%.1f\u0026#39;)%float(baris[i+2][1].split(\u0026#39;:\u0026#39;)[2])).zfill(4) \tlintang = ((\u0026#39;%.2f\u0026#39;)%float(baris[i+2][2])).zfill(6) \tbujur = ((\u0026#39;%.2f\u0026#39;)%float(baris[i+2][3])).zfill(6) \tdepth = (\u0026#39;%.1f\u0026#39;)%float(baris[i+2][4]) \tmag = (\u0026#39;%.1f\u0026#39;)%float(baris[i+2][5]) \tunknown = \u0026#39;0.0\u0026#39; \trms = (\u0026#39;%.3f\u0026#39;)%float(baris[i+2][10]) \ttime0 = float(detik)+float(menit)*60+float(jam)*60*60+float(tanggal)*60*60*24 \tfile.write(\u0026#39;#\u0026#39;+tahun.rjust(5)+bulan.rjust(3)+tanggal.rjust(3)+jam.rjust(3)+ \tmenit.rjust(3)+detik.rjust(5)+lintang.rjust(8)+bujur.rjust(10)+ \tdepth.rjust(9)+mag.rjust(5)+unknown.rjust(6)+unknown.rjust(6)+ \trms.rjust(8)+str(event).rjust(10)+\u0026#39;\\n\u0026#39;) \tif len(baris[i])\u0026gt;0 and baris[i][0]==\u0026#39;Net\u0026#39;: \ttry: \tj=0 \twhile j\u0026lt;1: \ti=i+1 \ttry: \tidSta = baris[i][1] \tphase = baris[i][2] \ttanggal = baris[i][3].split(\u0026#39;-\u0026#39;)[2] \tjam = baris[i][4].split(\u0026#39;:\u0026#39;)[0] \tmenit = baris[i][4].split(\u0026#39;:\u0026#39;)[1] \tdetik = baris[i][4].split(\u0026#39;:\u0026#39;)[2] \ttime1 = float(detik)+float(menit)*60+float(jam)*60*60+float(tanggal)*60*60*24 \tdeltatime = (\u0026#39;%.2f\u0026#39;)%(time1-time0) \tunknown = \u0026#39;1.000\u0026#39; \tfile.write(idSta.rjust(5)+deltatime.rjust(12)+unknown.rjust(8)+phase.rjust(4)+\u0026#39;\\n\u0026#39;) \texcept: \tbreak\t\texcept: \tbreak \ti = i+1 file.close()   Pindahkan file Jatim.pha tersebut ke dalam folder [3] HypoDD untuk proses selanjutnya.  Catatan Nama file iput dan output harus di edit atau di sesuaikan dengan nama data anda ( Lihat script dengan text editor)\nhttps://github.\nRunning HypoDD  Tahapan ini adalah bagian inti dari relokasi hiposenter dengan Metode Double Difference yaitu running program HypoDD.  File yang harus dipersiapkan file di luar folder  station.dat berisi informasi stasiun yang digunakan. Jatim.pha berisi nilai travel time observasi yang dihasilkan dari tahap convert_data.  file di dalam folder ph2dt  ph2dt.inp berisi setting parameter ph2dt.exe program untuk menghitung bla bla bla  file di dalam folder hypoDD  hypoDD.inp berisi setting parameter station.dat berisi informasi stasiun yang digunakan. event.dat, event.sel dan dt.ct merupakan file output dari program ph2dt.exe yanng menjadi input pada program hypoDD.exe hypoDD.exe program untuk menghitung melakukan relokasi double difference  Langkah-langkah-langkah  Siapkan file-file yang telah disebutkan di atas Buka terminal cygwin lalu masuk ke dalam folder HypoDD/ph2dt/ Jalan program ph2dt.exe dengan perintah  1  ./ph2dt.exe ph2dt.inp`   maka akan menghasilkan file  event.dat berisi daftar event yang digunakan dalam penelitian. event.sel berisi daftar event yang memenuhi kriteria pada setting parameter ph2dt.inp dt.ct berisi nilai travel time relatif antara pasangan event.  Pindahkan ke-3 file tersebut ke dalam folder HypoDD Ubah direktori kerja terminal cygwin ke dalam folder HypoDD Jalan program hypoDD.exe dengan perintah  1  ./hypoDD.exe`   maka akan menghasilkan file  hypoDD.reloc.001 hypoDD.reloc.001.002 hypoDD.reloc.00n bersisi parameter hiposenter hasil relokasi setep 1, 2 hingga step n hypoDD.reloc berisi parameter final hasil relokasi hypoDD.sta berisi koordinat stasiun yang digunakan dalam relokasi hypoDD.res berisi nilai residuals  Pindahkan file hypoDD.reloc ke dalam folder Plot Result untuk tahap plotting  Membahas tutorial relokasi hiposenter menggunakan software HypoDD\n","permalink":"http://www.galeri-seismologi.com/post/relokasi_hypodd/","summary":"Relokasi-HypoDD Begian ini adalah pendahuluan untuk menampilkan daerah penelitian yaitu daerah Jawa Timur.\n set path=C:\\programs\\GMT4\\bin;%PATH% set F=Jatim.ps set R=109/116/-11.5/-4 set GU=GU.dat set seis=seis.dat set M=mainshock.dat set GA=GA.dat set ST=station.dat set A=volcano.dat set P=E:/Muhajir/GMT/topo_putih.cpt set NC=E:/Muhajir/GMT/srtm_15_indo.grd set NC1=E:/Muhajir/GMT/srtm_15_indo.grd.int set sesar=E:/Muhajir/GMT/sesar.gmt set sesar2=E:/Muhajir/GMT/sesar2.gmt set sesar=E:/Muhajir/GMT/hajir.gmt set sesar2=E:/Muhajir/GMT/sesar2.gmt set SA=SA.d set SB=SB.d set SC=SC.d set LA=lineA.d set LB=lineB.d set LC=lineC.d set EA1=111.7580000 set EA2=-6.00 set CA1=111.7580000 set CA2=-11.00 set EA=%EA1%/%EA2% set CA=%CA1%/%CA2% set EB1=112.","title":"Relokasi HypoDD"},{"content":"Sebuah media untk saling sharing segala hal tentang seismologi.\nBukan blog tutorial melainkan sekedar dokumentasi proses belajar yang kami lakukan.\nSEMOGA BERMANFAAT.\n","permalink":"http://www.galeri-seismologi.com/about/","summary":"Sebuah media untk saling sharing segala hal tentang seismologi.\nBukan blog tutorial melainkan sekedar dokumentasi proses belajar yang kami lakukan.\nSEMOGA BERMANFAAT.","title":"Galeri Seismologi"},{"content":"Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.\nThis document is a brief primer on using go templates. The go docs provide more details.\nIntroduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that go templates parse very quickly.\nA unique characteristic of go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the go docs.\nBasic Syntax Go lang templates are html files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026ldquo;foo\u0026rdquo;:\n{{ foo }}  Parameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }}  Methods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026ldquo;bar\u0026rdquo;\n{{ .Params.bar }}  Parentheses can be used to group items together\n{{ if or (isset .Params \u0026quot;alt\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;) }} Caption {{ end }}  Variables Each go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt;  Variables can also be defined and referenced.\n{{ $address := \u0026quot;123 Main St.\u0026quot;}} {{ $address }}  Functions Go template ship with a few functions which provide basic functionality. The go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.\nExample:\n{{ add 1 2 }}  Includes When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.\nExample:\n{{ template \u0026quot;chrome/header.html\u0026quot; . }}  Logic Go templates provide the most basic iteration and conditional logic.\nIteration Just like in go, the go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.\nExample 1: Using Context\n{{ range array }} {{ . }} {{ end }}  Example 2: Declaring value variable name\n{{range $element := array}} {{ $element }} {{ end }}  Example 2: Declaring key and value variable name\n{{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }}  Conditionals If, else, with, or, \u0026amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.\nGo Templates treat the following values as false:\n false 0 any array, slice, map, or string of length zero  Example 1: If\n{{ if isset .Params \u0026quot;title\u0026quot; }}\u0026lt;h4\u0026gt;{{ index .Params \u0026quot;title\u0026quot; }}\u0026lt;/h4\u0026gt;{{ end }}  Example 2: If -\u0026gt; Else\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{else}} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Example 3: And \u0026amp; Or\n{{ if and (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}}  Example 4: With\nAn alternative way of writing \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.\nThe first example above could be simplified as:\n{{ with .Params.title }}\u0026lt;h4\u0026gt;{{ . }}\u0026lt;/h4\u0026gt;{{ end }}  Example 5: If -\u0026gt; Else If\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{ else if isset .Params \u0026quot;caption\u0026quot; }} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Pipes One of the most powerful components of go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline\u0026rsquo;s output becomes the input of the following pipe.\nBecause of the very simple syntax of go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.\nA few simple examples should help convey how to use the pipe.\nExample 1 :\n{{ if eq 1 1 }} Same {{ end }}  is the same as\n{{ eq 1 1 | if }} Same {{ end }}  It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.\nExample 2 :\n{{ index .Params \u0026quot;disqus_url\u0026quot; | html }}  Access the page parameter called \u0026ldquo;disqus_url\u0026rdquo; and escape the HTML.\nExample 3 :\n{{ if or (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Stuff Here {{ end }}  Could be rewritten as\n{{ isset .Params \u0026quot;caption\u0026quot; | or isset .Params \u0026quot;title\u0026quot; | or isset .Params \u0026quot;attr\u0026quot; | if }} Stuff Here {{ end }}  Context (aka. the dot) The most easily overlooked concept to understand about go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.\nExample:\n {{ $title := .Site.Title }} {{ range .Params.tags }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;{{ $baseurl }}/tags/{{ . | urlize }}\u0026quot;\u0026gt;{{ . }}\u0026lt;/a\u0026gt; - {{ $title }} \u0026lt;/li\u0026gt; {{ end }}  Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.\nHugo Parameters Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.\nUsing Content (page) Parameters In each piece of content you can provide variables to be used by the templates. This happens in the front matter.\nAn example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn\u0026rsquo;t make a lot of sense. We\u0026rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.\nHere is the example front matter:\n1 2 3 4 5 6 7 8 9  --- title: \u0026#34;Permalinks\u0026#34; date: \u0026#34;2013-11-18\u0026#34; aliases:  - \u0026#34;/doc/permalinks/\u0026#34; groups: [\u0026#34;extras\u0026#34;] groups_weight: 30 notoc: true ---   Here is the corresponding code inside of the template:\n {{ if not .Params.notoc }} \u0026lt;div id=\u0026quot;toc\u0026quot; class=\u0026quot;well col-md-4 col-sm-6\u0026quot;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; {{ end }}  Using Site (config) Parameters In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.\nFor instance, you might declare:\n1 2 3 4  params:  CopyrightHTML: \u0026#34;Copyright \u0026amp;#xA9; 2013 John Doe. All Rights Reserved.\u0026#34;  TwitterUser: \u0026#34;spf13\u0026#34;  SidebarRecentLimit: 5   Within a footer layout, you might then declare a \u0026lt;footer\u0026gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.\n1 2 3  {{if .Site.Params.CopyrightHTML}}\u0026lt;footer\u0026gt; \u0026lt;div class=\u0026#34;text-center\u0026#34;\u0026gt;{{.Site.Params.CopyrightHTML | safeHtml}}\u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt;{{end}}   An alternative way of writing the \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:\n1 2 3 4 5  {{with .Site.Params.TwitterUser}}\u0026lt;span class=\u0026#34;twitter\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;https://twitter.com/{{.}}\u0026#34; rel=\u0026#34;author\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;/images/twitter.png\u0026#34; width=\u0026#34;48\u0026#34; height=\u0026#34;48\u0026#34; title=\u0026#34;Twitter: {{.}}\u0026#34;  alt=\u0026#34;Twitter\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;{{end}}   Finally, if you want to pull \u0026ldquo;magic constants\u0026rdquo; out of your layouts, you can do so, such as in this example:\n1 2 3 4 5 6  \u0026lt;nav class=\u0026#34;recent\u0026#34;\u0026gt;  \u0026lt;h1\u0026gt;Recent Posts\u0026lt;/h1\u0026gt;  \u0026lt;ul\u0026gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}  \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34;\u0026gt;{{.Title}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;  {{end}}\u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt;   ","permalink":"http://www.galeri-seismologi.com/post/goisforlovers/","summary":"Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.\nThis document is a brief primer on using go templates.","title":"(Hu)go Template Primer"},{"content":"Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at installing hugo\nStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\n Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:\ngit clone https://github.com/spf13/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Press ctrl+c to stop  Once you\u0026rsquo;ve gotten here, follow along the rest of this page on your local build.\nStep 3. Change the docs site Stop the Hugo process by hitting ctrl+c.\nNow we are going to run hugo again, but this time with hugo in watch mode.\n/path/to/hugo/from/step/1/hugo server --source=./docs --watch \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Watching for changes in /Users/spf13/Code/hugo/docs/content \u0026gt; Press ctrl+c to stop  Open your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.\nContent files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.\nChange and save this file.. Notice what happened in your terminal.\n\u0026gt; Change detected, rebuilding site \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 26 ms  Refresh the browser and observe that the typo is now fixed.\nNotice how quick that was. Try to refresh the site before it\u0026rsquo;s finished building.. I double dare you. Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.\nStep 4. Have fun The best way to learn something is to play with it.\n","permalink":"http://www.galeri-seismologi.com/post/hugoisforlovers/","summary":"Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at installing hugo\nStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\n Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:","title":"Getting Started with Hugo"},{"content":"Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png  should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.\nCreate your Hugo configuration file Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.\nSet your configuration publish folder to _site The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you\u0026rsquo;ll want to do one of two alternatives:\n  Change your submodule to point to map gh-pages to public instead of _site (recommended).\n git submodule deinit _site git rm _site git submodule add -b gh-pages git@github.com:your-username/your-repo.git public    Or, change the Hugo configuration to use _site instead of public.\n { .. \u0026quot;publishdir\u0026quot;: \u0026quot;_site\u0026quot;, .. }    Convert Jekyll templates to Hugo templates That\u0026rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll\u0026rsquo;s template documentation if you need to refresh your memory on how you built your blog and Hugo\u0026rsquo;s template to learn Hugo\u0026rsquo;s way.\nAs a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours.\nConvert Jekyll plugins to Hugo shortcodes Jekyll has plugins; Hugo has shortcodes. It\u0026rsquo;s fairly trivial to do a port.\nImplementation As an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.\nJekyll\u0026rsquo;s plugin:\nmodule Jekyll class ImageTag \u0026lt; Liquid::Tag @url = nil @caption = nil @class = nil @link = nil // Patterns IMAGE_URL_WITH_CLASS_AND_CAPTION = IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;(\\s+)-\u0026gt;((https?:\\/\\/|\\/)(\\S+))(\\s*)/i IMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;/i IMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i IMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i def initialize(tag_name, markup, tokens) super if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK @class = $1 @url = $3 @caption = $7 @link = $9 elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION @class = $1 @url = $3 @caption = $7 elsif markup =~ IMAGE_URL_WITH_CAPTION @url = $1 @caption = $5 elsif markup =~ IMAGE_URL_WITH_CLASS @class = $1 @url = $3 elsif markup =~ IMAGE_URL @url = $1 end end def render(context) if @class source = \u0026quot;\u0026lt;figure class='#{@class}'\u0026gt;\u0026quot; else source = \u0026quot;\u0026lt;figure\u0026gt;\u0026quot; end if @link source += \u0026quot;\u0026lt;a href=\\\u0026quot;#{@link}\\\u0026quot;\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;img src=\\\u0026quot;#{@url}\\\u0026quot;\u0026gt;\u0026quot; if @link source += \u0026quot;\u0026lt;/a\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;figcaption\u0026gt;#{@caption}\u0026lt;/figcaption\u0026gt;\u0026quot; if @caption source += \u0026quot;\u0026lt;/figure\u0026gt;\u0026quot; source end end end Liquid::Template.register_tag('image', Jekyll::ImageTag)  is written as this Hugo shortcode:\n\u0026lt;!-- image --\u0026gt; \u0026lt;figure {{ with .Get \u0026quot;class\u0026quot; }}class=\u0026quot;{{.}}\u0026quot;{{ end }}\u0026gt; {{ with .Get \u0026quot;link\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt;{{ end }} \u0026lt;img src=\u0026quot;{{ .Get \u0026quot;src\u0026quot; }}\u0026quot; {{ if or (.Get \u0026quot;alt\u0026quot;) (.Get \u0026quot;caption\u0026quot;) }}alt=\u0026quot;{{ with .Get \u0026quot;alt\u0026quot;}}{{.}}{{else}}{{ .Get \u0026quot;caption\u0026quot; }}{{ end }}\u0026quot;{{ end }} /\u0026gt; {{ if .Get \u0026quot;link\u0026quot;}}\u0026lt;/a\u0026gt;{{ end }} {{ if or (or (.Get \u0026quot;title\u0026quot;) (.Get \u0026quot;caption\u0026quot;)) (.Get \u0026quot;attr\u0026quot;)}} \u0026lt;figcaption\u0026gt;{{ if isset .Params \u0026quot;title\u0026quot; }} {{ .Get \u0026quot;title\u0026quot; }}{{ end }} {{ if or (.Get \u0026quot;caption\u0026quot;) (.Get \u0026quot;attr\u0026quot;)}}\u0026lt;p\u0026gt; {{ .Get \u0026quot;caption\u0026quot; }} {{ with .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt; {{ end }} {{ .Get \u0026quot;attr\u0026quot; }} {{ if .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;/a\u0026gt; {{ end }} \u0026lt;/p\u0026gt; {{ end }} \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; \u0026lt;!-- image --\u0026gt;  Usage I simply changed:\n{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg \u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were \u0026quot;having fun\u0026quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; -\u0026gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}  to this (this example uses a slightly extended version named fig, different than the built-in figure):\n{{% fig class=\u0026quot;full\u0026quot; src=\u0026quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg\u0026quot; title=\u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; link=\u0026quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/\u0026quot; %}}  As a bonus, the shortcode named parameters are, arguably, more readable.\nFinishing touches Fix content Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed.\nClean up You\u0026rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn\u0026rsquo;t used, delete it.\nA practical example in a diff Hey, it\u0026rsquo;s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff.\n","permalink":"http://www.galeri-seismologi.com/post/migrate-from-jekyll/","summary":"Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png  should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.","title":"Migrate to Hugo from Jekyll"},{"content":"Hypoellipse  Daerah Penelitian Convert Data Running Hypoelipse [Running Hypoellipse Multi Event] [Plot Result]  Relokasi-Velest  Daerah Penelitian Convert Data Running Velest [Plot Result]  Relokasi-HypoDD  Daerah Penelitian Convert Data Running HypoDD [Plot Result]  Relokasi-MJHD Tomografi-Simulps12  Filter Katalog Convert Data Grid Node Running Simulps12 Ray Tracing [Plot Relocated Earthuqake] [Plot Tomogram] [Checkerboard Test]  Waveform-Treatment  Download Waveform  [webdc] [fdsnws] [massdownloader obspy]   Remove Instrument Response  [extrak pz file] [remove instrument response]   [Convert Metadata] Picking  [seisgram] [SAC]   [Waveform Alignment] [Waveform Downsampling] TauP Seizmo Dimas SAC Miscellaneous  Ambiet Noise Cross-Correlation (ANCC)  [Raw Data Preparation] [Running ANCC] [Plot Result]  Earthquake Detection (EQcorrscan)  [Create Template] [Match Filter] [Plot Result]  Moment-Yagi  [Daerah Penelitian] [Raw Data Preparation] [Running Moment]  Isola  [Daerah Penelitian] [Raw Data Preparation] [Running Moment] [Plot Result]  Shear Wave Splitting (Sheba) Spectral Fitting Peak Ground Acceleration (PGA) Interferometric Synthetic Aperture Radar (inSAR) Horizontal to Vertical Spectral Ratio (HVSR) Installations  [GMT] [TauP] [Seisan] [SAC] [Sheba] [Moment] [rdseed] [python] [seizmo] [cygwin] [WSL] [VsCode] [Obspy] [EQcorrscan] [pip]  ","permalink":"http://www.galeri-seismologi.com/content/","summary":"content","title":"Content"}]